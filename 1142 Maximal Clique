#include<cstdio>
#include<vector>
#include<iostream>
using namespace std;
const int maxv = 300;
const int INF = 0x3fffffff;
int G[maxv][maxv];
bool JudgeIsClique(vector<int> v, int n){
    for(int i = 0; i < n; ++i){
        for(int j = i + 1; j < n; ++j){
            if(G[v[i]][v[j]] == 0){
                return false;
            }
        }
    }
    return true;
}
bool isIn(vector<int> v, int x){
    for(int i = 0; i < v.size(); ++i){
        if(x == v[i]) return true;
    }
    return false;
}
int main(){
    int n, m;
    //fill(G[0], G[0] + maxv * maxv, INF);
    scanf("%d%d", &n, &m);
    for(int i = 0; i < m; ++i){
        int a, b;
        scanf("%d%d", &a, &b);
        G[a][b] = G[b][a] = 1;
    }
    int k;
    scanf("%d", &k);
    for(int i = 0; i < k; ++i){
        int num;
        scanf("%d", &num);
        vector<int> v(num);
        int isMax = 1;
        for(int i = 0; i < num; ++i){
            scanf("%d", &v[i]);
        }
        if(!JudgeIsClique(v, num)) printf("Not a Clique\n");
        else{
            
            for(int i = 1; i <= n; ++i){
                if(!isIn(v,i)){
                    for(int j = 0; j < v.size(); ++j){
                        if(G[i][v[j]] == 0) break;
                        if(j == v.size() - 1) isMax = 0;
                    }
                }
                if(isMax == 0){
                    printf("Not Maximal\n");
                    break;
                }
    
            }
            if(isMax == 1){
                printf("Yes\n");
            }

        }
    }
    return 0;
}

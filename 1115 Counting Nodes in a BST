#include<cstdio>
#include<iostream>
#include<vector>
using namespace std;
const int N = 1001;
vector<int> num(1000);
int n;
int maxdepth = -1;
struct node{
    int data;
    struct node* lchild;
    struct node* rchild;
};
void insert(node* &root, int x){
    if(root == NULL){
        root = new node;
        root->data = x;
        root->lchild = root->rchild = NULL;
        return;
    }
    if(x <= root->data){
        insert(root->lchild, x);
    }else{
        insert(root->rchild, x);
    }
}
void DFS(node* root, int depth){
    if(root == NULL){
        maxdepth = max(maxdepth, depth);
        return;
    }
    num[depth]++;
    DFS(root->lchild, depth + 1);
    DFS(root->rchild, depth + 1);
}
int main() {
    int n, t;
    scanf("%d", &n);
    node *root = NULL;
    for(int i = 0; i < n; i++) {
        scanf("%d", &t);
        insert(root, t);
    }
    DFS(root, 0);
    printf("%d + %d = %d", num[maxdepth-1], num[maxdepth-2], num[maxdepth-1] + num[maxdepth-2]);
    return 0;
}

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
vector<int> v[100];
int book[100], maxdepth =0 ;//用book[i]记录每一层中叶子节点的个数 
void dfs(int index, int depth) {
    if(v[index].size() == 0) {
        book[depth]++;
        maxdepth = max(maxdepth, depth);
        return ;
    }
    for(int i = 0; i < v[index].size(); i++)
        dfs(v[index][i], depth + 1);
}
int main() {
    int n, m, k, node, child;
    scanf("%d %d", &n, &m);
    for(int i = 0; i < m; i++) {
        scanf("%d %d",&node, &k);
        for(int j = 0; j < k; j++) {  //每个节点有k个孩子
            scanf("%d", &child);
            v[node].push_back(child);
        }
    }
    dfs(1, 1);//从根节点开始，根节点编号为1，深度为1
    printf("%d", book[1]);
    for(int i = 2; i <= maxdepth; i++)
        printf(" %d", book[i]);
    return 0;
}

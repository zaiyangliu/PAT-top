#include<cstdio>
#include<algorithm>
using namespace std;
struct Student{
    int GE, GI, sum;
    int r, stuId;
    int choice[6];
}stu[40010];
struct School{
    int quota;
    int stuNum;
    int id[40010];
    int lastAdmit;
}sch[110];
bool cmpStu(Student a, Student b){
    if(a.sum != b.sum) return a.sum > b.sum;
    else return a.GE > b.GE;
}
bool cmpId(int a, int b){
    return stu[a].stuId < stu[b].stuId;
}
int main(){
    int n, m, k;
    scanf("%d%d%d", &n, &m, &k);
    for(int i = 0; i < m; ++i){
        scanf("%d", &sch[i].quota);
        sch[i].stuNum = 0;
        sch[i].lastAdmit = -1;
    }
    for(int i = 0; i < n; ++i){
        stu[i].stuId = i;
        scanf("%d%d", &stu[i].GE, &stu[i].GI);
        stu[i].sum = stu[i].GE + stu[i].GI;
        for(int j = 0; j < k; j++){
            scanf("%d", &stu[i].choice[j]);
        }
    }
    sort(stu, stu + n, cmpStu);
    for(int i = 0; i < n; ++i){
        if(i > 0 && stu[i].sum == stu[i-1].sum && stu[i].GE == stu[i-1].GE){
            stu[i].r = stu[i-1].r;
        }else{
            stu[i].r = i;
        }
    }
    for(int i = 0; i < n; ++i){
        for(int j = 0; j < k; j++){
            int cho = stu[i].choice[j];
            int num = sch[cho].stuNum;
            int last = sch[cho].lastAdmit;
            if(num < sch[cho].quota || last != -1 && stu[i].r == stu[last].r){
                sch[cho].id[num] = i;
                sch[cho].lastAdmit = i;
                sch[cho].stuNum++;
                break;
            }
        }
    }
    for(int i = 0; i < m; ++i){
        if(sch[i].stuNum > 0){
            sort(sch[i].id, sch[i].id + sch[i].stuNum, cmpId);
            for(int j = 0; j < sch[i].stuNum; j++){
                printf("%d", stu[sch[i].id[j]].stuId);
                if(j < sch[i].stuNum - 1) printf(" ");
            }
        }
        printf("\n");
    }
    return 0;
}

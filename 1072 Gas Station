#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
const int maxv = 1020;
const int INF = 0x3fffffff;
int n, m, k, DS, G[maxv][maxv];
int d[maxv];
bool vis[maxv] = {false};
void dijkstra(int s){
   // memset(vis, false, sizeof(vis));
   fill(vis, vis + maxv, false);
    fill(d, d + maxv, INF);
    d[s] = 0;
    for(int i = 0; i < n + m; ++i){
        int u = -1, min = INF;
        for(int j = 1; j <= n + m; ++j){
            if(vis[j] == false && d[j] < min){
                u = j;
                min = d[j];
            }
        }
        if(u == -1) return;
        vis[u] = true;
        for(int v = 1; v <= n + m; ++v){
            if(vis[v] == false && G[u][v] != INF){
                if(d[v] > d[u] + G[u][v]){
                    d[v] = d[u] + G[u][v];
                }
            }
        }
    }
}
int getId(char str[]){
    int i = 0, len = strlen(str), id = 0;
    while(i < len){
        if(str[i] != 'G'){
            id = id * 10 + (str[i] - '0');
        }
        ++i;
    }
    if(str[0] == 'G') return id + n;
    else return id;
}
int main(){
    scanf("%d%d%d%d", &n, &m, &k, &DS);
    int u, v, w;
    char city1[5], city2[5];
    fill(G[0], G[0] + maxv * maxv, INF);
    for(int i = 0; i < k; ++i){
        scanf("%s %s %d", city1, city2, &w);
        u = getId(city1);
        v = getId(city2);
        G[u][v] = G[v][u] = w;
    }
    double ansDis = -1, ansAvg = INF;
    int ansId = -1;
    for(int i = n + 1; i <= n + m; ++i){
        double minDis = INF, avg = 0;
        dijkstra(i);
        for(int j = 1; j <= n; ++j){
            if(d[j] > DS){
                minDis = -1;
                 break;
            }
            if(d[j] < minDis){
                minDis = d[j];
            }
            avg += 1.0 * d[j] / n;
        }
        if(minDis == -1) continue;
        if(minDis > ansDis){
            ansId = i;
            ansDis = minDis;
            ansAvg = avg;
        }else if(minDis == ansDis && avg < ansAvg){
            ansId = i;
            ansAvg = avg;
        }
    }
    if(ansId == -1) printf("No Solution\n");
    else{
        printf("G%d\n", ansId - n);
        printf("%.1f %.1f\n", ansDis, ansAvg);
    }
    return 0;
}
